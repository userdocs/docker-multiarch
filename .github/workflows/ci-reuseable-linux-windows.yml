name: ci - main reusable caller

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: "Define the git repo used for the build"
        required: true
        default: "https://github.com/esnet/iperf.git"
      source_branch:
        description: "Specify the branch to build"
        required: true
        default: "master"
      skip_new_tag_check:
        description: "Skip new tag check?"
        required: true
        default: false
        type: boolean
      force_build:
        description: "Force a build"
        required: false
        default: false
        type: boolean
      linux_build_type:
        description: "Build iperf3 using qemu emulation"
        required: true
        default: false
        type: boolean
      artifacts_only:
        description: "No release - artifacts only"
        required: true
        default: false
        type: boolean
      linux:
        description: "Skip Linux build"
        type: boolean
        required: true
        default: false
      windows:
        description: "Skip Windows build"
        type: boolean
        required: true
        default: false
      skip_rerun:
        description: "Skip rerun?"
        required: true
        default: false
        type: boolean
      retries:
        description: "Number of rerun retries"
        required: true
        default: "1"
        type: choice
        options: ["1", "2", "3", "4", "5", "6", "7", "8", "9"]

  schedule:
    - cron: "*/5 * * * *" # every 5 minutes

permissions:
  actions: write
  id-token: write
  contents: write
  attestations: write
  packages: write

env:
  GH_TOKEN: "${{ github.TOKEN }}"

jobs:
  Scheduled-Defaults:
    runs-on: ubuntu-latest
    outputs:
      source_repo: ${{ github.event.inputs.source_repo || 'https://github.com/esnet/iperf.git' }}
      source_branch: ${{ github.event.inputs.source_branch || 'master' }}
      artifacts_only: ${{ github.event.inputs.artifacts_only || 'false' }}
      skip_new_tag_check: ${{ github.event.inputs.skip_new_tag_check || 'false'  }}
      force_build: ${{ github.event.inputs.force_build || 'false' }}
      linux_build_type: ${{ github.event.inputs.linux_build_type || 'false' }}
      linux: ${{ github.event.inputs.linux || 'false' }}
      windows: ${{ github.event.inputs.windows || 'false' }}
      skip_rerun: ${{ github.event.inputs.skip_rerun || 'false' }}
      retries: ${{ github.event.inputs.retries || '1' }}
    steps:
      - name: Set output
        run: echo "Setting output"

  Show-Ouputs:
    needs: Scheduled-Defaults
    runs-on: ubuntu-latest
    steps:
      - name: Set output
        run: |
          echo "source_repo: ${{ needs.Scheduled-Defaults.outputs.source_repo }}"
          echo "source_branch: ${{ needs.Scheduled-Defaults.outputs.source_branch }}"
          echo "artifacts_only: ${{ needs.Scheduled-Defaults.outputs.artifacts_only }}"
          echo
          echo "skip_new_tag_check: ${{ needs.Scheduled-Defaults.outputs.skip_new_tag_check }}"
          echo "force_build: ${{ needs.Scheduled-Defaults.outputs.force_build }}"
          echo "linux_build_type: ${{ needs.Scheduled-Defaults.outputs.linux_build_type }}"
          echo "linux: ${{ needs.Scheduled-Defaults.outputs.linux }}"
          echo "windows: ${{ needs.Scheduled-Defaults.outputs.windows }}"
          echo "skip_rerun: ${{ needs.Scheduled-Defaults.outputs.skip_rerun }}"
          echo "retries: ${{ needs.Scheduled-Defaults.outputs.retries }}"

  Iperf3-Tag:
    needs: Scheduled-Defaults
    if: needs.Scheduled-Defaults.outputs.skip_new_tag_check == 'false'
    uses: ./.github/workflows/ci-check-for-new-release-tag.yml
    secrets: inherit
    with:
      force_build: ${{ needs.Scheduled-Defaults.outputs.force_build == 'false' }}

  Linux-Emulation:
    needs: [Scheduled-Defaults, Iperf3-Tag]
    if: always() && ( needs.Iperf3-Tag.outputs.continue_build == 'yes' || needs.Scheduled-Defaults.outputs.skip_new_tag_check == 'true' ) && ( needs.Scheduled-Defaults.outputs.linux == 'false' && needs.Scheduled-Defaults.outputs.linux_build_type == 'true' )
    uses: ./.github/workflows/ci-linux-emulation.yml
    secrets: inherit
    with:
      source_repo: ${{ needs.Scheduled-Defaults.output.source_repo }}
      source_branch: ${{ needs.Scheduled-Defaults.output.source_branch }}
      artifacts_only: ${{ needs.Scheduled-Defaults.output.artifacts_only }}

  Linux-Crossbuild:
    needs: [Scheduled-Defaults, Iperf3-Tag]
    if: always() && ( needs.Iperf3-Tag.outputs.continue_build == 'yes' || needs.Scheduled-Defaults.outputs.skip_new_tag_check == 'true' ) && ( needs.Scheduled-Defaults.outputs.linux == 'false' && needs.Scheduled-Defaults.outputs.linux_build_type == 'false' )
    uses: ./.github/workflows/ci-linux-crossbuild.yml
    secrets: inherit
    with:
      source_repo: ${{ needs.Scheduled-Defaults.output.source_repo }}
      source_branch: ${{ needs.Scheduled-Defaults.output.source_branch }}
      artifacts_only: ${{ needs.Scheduled-Defaults.output.artifacts_only }}

  Docker:
    needs: [Iperf3-Tag, Linux-Emulation, Linux-Crossbuild]
    if: always() && ( needs.Linux-Emulation.result == 'success' || needs.Linux-Crossbuild.result == 'success' || needs.Scheduled-Defaults.outputs.skip_new_tag_check == 'true' ) && ( needs.Iperf3-Tag.outputs.continue_build == 'yes' || needs.Scheduled-Defaults.outputs.skip_new_tag_check == 'true' ) && ( needs.Scheduled-Defaults.outputs.linux == 'false' && needs.Scheduled-Defaults.outputs.artifacts_only == 'false' )
    uses: ./.github/workflows/ci-docker.yml
    secrets: inherit

  Windows:
    needs: [Iperf3-Tag]
    if: needs.Iperf3-Tag.outputs.continue_build == 'yes' && github.event.inputs.windows == 'false'
    uses: ./.github/workflows/ci-windows.yml
    secrets: inherit
    with:
      source_repo: ${{ needs.Scheduled-Defaults.output.source_repo }}
      source_branch: ${{ needs.Scheduled-Defaults.output.source_branch }}
      artifacts_only: ${{ needs.Scheduled-Defaults.output.artifacts_only }}

  rerun-on-failure:
    needs: [Iperf3-Tag, Linux-Emulation, Linux-Crossbuild, Docker, Windows]
    if: always() && failure() && needs.Scheduled-Defaults.outputs.skip_rerun == 'false'
    name: rerun-on-failure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Trigger rerun workflow on job failures
        run: |
          inputs_retries="${{ needs.Scheduled-Defaults.outputs.retries }}"
          gh workflow run rerun.yml -f run_id=${{ github.run_id }} -f attempts=${{ github.run_attempt }} -f retries=${inputs_retries:-1}
