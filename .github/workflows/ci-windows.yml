name: ci - windows binary build

on:
  workflow_call:
    outputs:
      set-tag: ${{ steps.set-tag.outputs.release_tag }}
    inputs:
      source_repo:
        type: string
        required: true
      source_branch:
        type: string
        required: true
      artifacts_only:
        type: string
        required: true

env:
  GH_TOKEN: "${{ github.TOKEN }}"

jobs:
  build:
    runs-on: windows-latest
    outputs:
      set-tag: ${{ steps.set-tag.outputs.release_tag }}
    strategy:
      fail-fast: false
      matrix:
        name: [iperf3]
        build: [basic, openssl]
        arch: [amd64]
        include:
          - build: "basic"
            filename: ""
            openssl: "no"
          - build: "openssl"
            filename: "openssl-"
            openssl: "yes"

    name: ${{ matrix.name }}-${{ matrix.arch }}-${{ matrix.filename }}win.zip

    env:
      cygwin_path: ""

    steps:
      - run: git config --global core.autocrlf input

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install cygwin-installer.cmd
        run: .\cygwin-installer.cmd

      - name: Build static
        run: .\cygwin\bin\bash.exe -l build.sh "${{ matrix.openssl }}" "${{ env.cygwin_path }}" "${{ inputs.source_repo }}" "${{ inputs.source_branch }}"

      - name: VirusTotal Scan
        id: virustotal
        uses: crazy-max/ghaction-virustotal@v4
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: |
            ${{ matrix.name }}/bin/iperf3.exe
            ${{ matrix.name }}/bin/cygwin1.dll

      - name: sha256sum ${{ inputs.distinct_id }}
        run: |
          printf '%s' https://www.virustotal.com/gui/file/$(sha256sum ${{ matrix.name }}/bin/iperf3.exe | awk '{print $1}') > ${{ matrix.name }}-${{ matrix.arch }}-${{ matrix.filename }}win.url
          cat ${{ matrix.name }}-${{ matrix.arch }}-${{ matrix.filename }}win.url

      - name: Archive build
        run: Compress-Archive ${{ matrix.name }} ${{ matrix.name }}-${{ matrix.arch }}-${{ matrix.filename }}win.zip

      - name: Generate artifact attestation  ${{ inputs.distinct_id }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: |
            ${{ matrix.name }}-${{ matrix.arch }}-${{ matrix.filename }}win.zip
            ${{ matrix.name }}/bin/iperf3.exe
            ${{ matrix.name }}/bin/cygwin1.dll

      - name: Create tag env
        run: echo "release_tag=$(Get-Content -Path iperf3_version)" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: Set tag env to output
        id: set-tag
        run: echo "release_tag=${{ env.release_tag }}" >> $env:GITHUB_OUTPUT

      - name: "Release - Create artifacts"
        if: inputs.artifacts_only == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.name }}-amd64-${{ matrix.filename }}win"
          path: |
            ${{ matrix.name }}-${{ matrix.arch }}-${{ matrix.filename }}win.zip
            ${{ matrix.name }}-${{ matrix.arch }}-${{ matrix.filename }}win.url

      - name: "Dev - Create artifacts"
        if: inputs.artifacts_only == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.name }}-amd64-${{ matrix.filename }}win"
          path: "${{ matrix.name }}"
